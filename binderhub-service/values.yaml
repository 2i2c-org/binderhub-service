# General configuration
# -----------------------------------------------------------------------------
#
nameOverride: ""
fullnameOverride: ""
global: {}

# Deployment resource
# -----------------------------------------------------------------------------
#

# The "config" section below is rendered by a k8s Secret and mounted as a .yaml
# file together with binderhub_config.py for the binderhub Python software to
# parse.
#
# Together they make the configured values below translate so that
# config.BinderHub.base_url sets c.BinderHub.base_url, or more generally that
# config.X.y sets c.X.y where X is a class and y is a configurable traitlet on
# the class.
#
config:
  BinderHub:
    base_url: /
    use_registry: true
  KubernetesBuildExecutor:
    docker_host: /var/run/docker-api/docker-api.sock
extraConfig: {}

replicas: 1
image:
  repository: quay.io/2i2c/binderhub-service
  tag: "set-by-chartpress"
  pullPolicy: ""
  pullSecrets: []
resources: {}
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

podSecurityContext: {}
podAnnotations: {}
nodeSelector: {}
affinity: {}
tolerations: []

# RBAC resources
# -----------------------------------------------------------------------------
#
rbac:
  create: true

# ServiceAccount resource
# -----------------------------------------------------------------------------
#
serviceAccount:
  create: true
  name: ""
  annotations: {}

# Service resource
# -----------------------------------------------------------------------------
#
service:
  type: ClusterIP
  port: 80

# Ingress resource
# -----------------------------------------------------------------------------
#
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# DaemonSet resource - docker-api
# -----------------------------------------------------------------------------
#
# This DaemonSet starts a pod on each node to setup a Docker API that
# binderhub's spawned build pods can make use of, via a hostPath volume that
# exposes a unix socket.
#
dockerApi:
  image:
    repository: docker.io/library/docker
    tag: "23.0.4-dind" # ref: https://hub.docker.com/_/docker/tags
    pullPolicy: ""
    pullSecrets: []
  resources: {}
  securityContext:
    privileged: true
    runAsUser: 0

  podSecurityContext: {}
  podAnnotations: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []
