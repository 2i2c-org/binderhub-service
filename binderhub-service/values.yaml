# General configuration
# -----------------------------------------------------------------------------
#
nameOverride: ""
fullnameOverride: ""
global: {}

# Resources for the BinderHub created build pods
# -----------------------------------------------------------------------------
#
buildPodsDockerConfig: {}
buildPodsRegistryCredentials:
  server: ""
  username: ""
  password: ""

# Deployment resource
# -----------------------------------------------------------------------------
#

# The "config" section below is rendered by a k8s Secret and mounted as a .yaml
# file together with binderhub_config.py for the binderhub Python software to
# parse.
#
# Together they make the configured values below translate so that
# config.BinderHub.base_url sets c.BinderHub.base_url, or more generally that
# config.X.y sets c.X.y where X is a class and y is a configurable traitlet on
# the class.
#
# Some config must be set here, and not via extraConfig, as its referenced by
# the chart's template directly.
#
# - BinderHub.base_url (readinessProbe)
# - BinderHub.port (containerPort)
#
config:
  BinderHub:
    base_url: /
    port: 8585
    require_build_only: true
  KubernetesBuildExecutor:
    # docker_host must not be updated, assumptions about it are hardcoded in
    # docker-api/daemonset.yaml
    docker_host: /var/run/docker-api/docker-api.sock
extraConfig:
  # binderhub-service creates a k8s Secret with a docker config.json file
  # including registry credentials.
  binderhub_service_00_build_pods_docker_config: |
    import os
    helm_release_name = os.environ["HELM_RELEASE_NAME"]
    c.KubernetesBuildExecutor.push_secret = f"{helm_release_name}-build-pods-docker-config"

replicas: 1
image:
  repository: quay.io/2i2c/binderhub-service
  tag: "set-by-chartpress"
  pullPolicy: ""
  pullSecrets: []
resources: {}
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

podSecurityContext: {}
podAnnotations: {}
nodeSelector: {}
affinity: {}
tolerations: []

# RBAC resources
# -----------------------------------------------------------------------------
#
rbac:
  create: true

# ServiceAccount resource
# -----------------------------------------------------------------------------
#
serviceAccount:
  create: true
  name: ""
  annotations: {}

# Service resource
# -----------------------------------------------------------------------------
#
service:
  type: ClusterIP
  port: 80

# Ingress resource
# -----------------------------------------------------------------------------
#
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# DaemonSet resource - docker-api
# -----------------------------------------------------------------------------
#
# This DaemonSet starts a pod on each node to setup a Docker API that
# binderhub's spawned build pods can make use of, via a hostPath volume that
# exposes a unix socket.
#
dockerApi:
  image:
    repository: docker.io/library/docker
    tag: "24.0.3-dind" # ref: https://hub.docker.com/_/docker/tags
    pullPolicy: ""
    pullSecrets: []
  resources: {}
  securityContext:
    privileged: true
    runAsUser: 0

  podSecurityContext: {}
  podAnnotations: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  extraArgs: []
  extraFiles: {}
