# General configuration
# -----------------------------------------------------------------------------
#
nameOverride: ""
fullnameOverride: ""
global: {}
custom: {}

# Resources for the BinderHub created build pods
# -----------------------------------------------------------------------------
#
buildPodsDockerConfig:
  dummy: dummy-value
buildPodsRegistryCredentials:
  server: "quay.io"
  username: "dummy-username"
  password: "dummy-password"

# Deployment resource
# -----------------------------------------------------------------------------
#
image:
  repository: quay.io/2i2c/binderhub-service
  tag: "set-by-chartpress"
extraCredentials:
  googleServiceAccountKey: |
    {
      "type": "service_account",
      "project_id": "PROJECT_ID",
      "private_key_id": "KEY_ID",
      "private_key": "-----BEGIN PRIVATE KEY-----\nPRIVATE_KEY\n-----END PRIVATE KEY-----\n",
      "client_email": "SERVICE_ACCOUNT_EMAIL",
      "client_id": "CLIENT_ID",
      "auth_uri": "https://accounts.google.com/o/oauth2/auth",
      "token_uri": "https://accounts.google.com/o/oauth2/token",
      "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
      "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/SERVICE_ACCOUNT_EMAIL"
    }
extraEnv:
  - name: HELM_RELEASE_NAME
    value: "{{ .Release.Name }}"

# RBAC resources
# -----------------------------------------------------------------------------
#
rbac:
  create: true

# ServiceAccount resource
# -----------------------------------------------------------------------------
#
serviceAccount:
  create: true
  name: ""

# Service resource
# -----------------------------------------------------------------------------
#
service:
  type: ClusterIP
  port: 80

# Ingress resource
# -----------------------------------------------------------------------------
#
ingress:
  enabled: true
  ingressClassName: mock-ingress-class-name
  hosts:
    - mocked1.domain.name
    - mocked2.domain.name
  pathSuffix: dummy-pathSuffix
  pathType: ImplementationSpecific
  tls:
    - secretName: tls
      hosts:
        - mocked1.domain.name
        - mocked2.domain.name

# DaemonSet resource - docker-api
# -----------------------------------------------------------------------------
#
dockerApi:
  image:
    repository: docker.io/library/docker
    tag: "23.0.5-dind"
  securityContext:
    privileged: true
    runAsUser: 0
  extraFiles:
    daemon-json:
      mountPath: /etc/docker/daemon.json
      data:
        debug: true
        insecure-registries: [localhost:5000]
